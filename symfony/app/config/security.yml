security:
  encoders:
    Symfony\Component\Security\Core\User\User: plaintext

  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

  providers:
    in_memory:
      memory:
        users:
          cdemko:  { password: cdemko, roles: [ 'ROLE_USER' ] }
          jmorcos:  { password: jmorcos, roles: [ 'ROLE_USER' ] }
          arevel:  { password: arevel, roles: [ 'ROLE_USER' ] }
          aprigent:  { password: aprigent, roles: [ 'ROLE_USER' ] }
          fbertrand:  { password: fbertrand, roles: [ 'ROLE_USER' ] }
          bbesserer:  { password: bbesserer, roles: [ 'ROLE_USER' ] }
          tbouwmans:  { password: tbouwmans, roles: [ 'ROLE_USER' ] }
          test:  { password: test, roles: [ 'ROLE_USER' ] }
          admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main_login:
        # Cette expression régulière permet de prendre /login (mais pas /login_check !)
        pattern:   ^/login$
        anonymous: true # On autorise alors les anonymes sur ce pare-feu
    index:
        pattern:   ^/index
        anonymous: true
    main:
      pattern:      ^/
      anonymous:    false
      provider:     in_memory
      form_login:
        login_path: login
        check_path: login_check
        default_target_path: previsionneluser_accueil
      logout:
        path:       logout
        target:     /login

  access_control:
    #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }